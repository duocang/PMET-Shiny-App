FROM rocker/shiny:4.3.3

############################## 1. shiny setting ###############################
COPY ./conf/shiny-server.conf /etc/shiny-server/shiny-server.conf

ENV work_dir="/home/shiny/PMET_docker"
COPY . $work_dir

RUN ln -sf $work_dir /srv/shiny-server/pmet

# Use the find command to find all .sh, .r, .py, .pl files and grant them 755 permissions
RUN find $work_dir/ \( -name "*.sh" -o -name "*.r" -o -name "*.py" -o -name "*.pl" \) -exec chmod 777 {} \;


############################## 2. install linux libs ###############################
RUN $work_dir/scripts/install_apt_tools.sh


# ############################## 3. R libs settings ###############################
ENV R_LIBS_USER=/usr/local/lib/R/library
# Set the directory owner and permissions
RUN mkdir -p     $R_LIBS_USER      && \
    chmod -R 777 $R_LIBS_USER
# Set environment variables in respective user profiles
RUN echo "export R_LIBS_USER='$R_LIBS_USER'" >> /root/.bashrc         && \
    echo "export R_LIBS_USER='$R_LIBS_USER'" >> /home/shiny/.bashrc   && \
    echo "R_LIBS_USER='$R_LIBS_USER'"        >> /root/.Renviron       && \
    echo "R_LIBS_USER='$R_LIBS_USER'"        >> /home/shiny/.Renviron


############################## 4. install R libs ###############################
# # Configure Java using R CMD javareconf
RUN sudo R CMD javareconf

# # renv for package management
# RUN Rscript -e "install.packages(c('remotes', 'littler', 'docopt', 'renv', 'jsonlite'))"
# RUN Rscript -e "renv::restore()"
RUN Rscript  $work_dir/R/utils/install_packages.R

RUN rsync -av --ignore-existing /usr/local/lib/R/library/ /usr/local/lib/R/site-library/ && \
    rsync -av --ignore-existing /usr/local/lib/R/site-library/ /usr/local/lib/R/library/


############################## 5. install python libs ###############################
RUN sudo apt-get update && \
    apt -y install python3-pip
RUN $work_dir/scripts/install_python_libs.sh


########################## 6. install bedtool and samtools ###########################
RUN apt -y install bedtools

# Samtools 1.3.1 #
ENV SAMTOOLS_INSTALL_DIR=/opt/samtools
ENV HTSLIB_INSTALL_DIR=/opt/htslib

WORKDIR /tmp
RUN wget https://github.com/samtools/samtools/releases/download/1.17/samtools-1.17.tar.bz2 && \
    tar -xjf samtools-1.17.tar.bz2 && \
    cd samtools-1.17 && \
    ./configure --disable-lzma --prefix=$SAMTOOLS_INSTALL_DIR && \
    make && \
    make install && \
    cd / && \
    rm -rf /tmp/samtools-1.17 /tmp/samtools-1.17.tar.bz2
# Set the working directory back to the root directory
WORKDIR $work_dir


################################## 7. compile pmet ###################################
# meme
RUN cd $work_dir/PMETdev/src/meme-5.5.3 \
    && aclocal \
    && automake \
    && mkdir -p build \
    && chmod a+x ./configure \
    && ./configure --prefix=$work_dir/PMETdev/src/meme-5.5.3/build --enable-build-libxml2 --enable-build-libxslt \
    && make \
    && make install \
    && chmod a+x build/bin/fimo \
    && cp build/bin/fimo $work_dir/PMETdev/scripts/ \
    && make distclean \
    && rm -rf build

# pmetindex
RUN cd $work_dir/PMETdev/src/indexing \
    && chmod a+x build.sh \
    && bash build.sh \
    && mv bin/pmetindex $work_dir/PMETdev/scripts/

# pmetParallel
RUN cd $work_dir/PMETdev/src/pmetParallel \
    && chmod a+x build.sh \
    && bash build.sh \
    && mv bin/pmetParallel_linux $work_dir/PMETdev/scripts/

# pmet
RUN cd $work_dir/PMETdev/src/pmet \
    && chmod a+x build.sh \
    && bash build.sh \
    && mv bin/pmet $work_dir/PMETdev/scripts/


############################# 8. download homotypic data ##############################
RUN $work_dir/scripts/download_pmet_indexing.sh


EXPOSE 3838
CMD ["/usr/bin/shiny-server"]
